apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.versions["kotlin_version"]}"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation rootProject.ext.dependencies.ankoCommons

    compileOnly project(':soluInfo')
    kapt project(':soluInfo')
    annotationProcessor project(':soluInfo')
//    implementation project(':annotation')
}

// copy from https://github.com/Kotlin/kotlin-examples/blob/master/gradle/kotlin-code-generation/example/build.gradle

apply plugin: 'idea'

idea {
    module {
//        sourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
//        generatedSourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
    }
}

// copy from https://android.jlelse.eu/merryannotation-your-first-annotation-processor-in-kotlin-android-eb3af4ab3402
sourceCompatibility = "7"
targetCompatibility = "7"

repositories {
    mavenCentral()
}

//task testDepends2 {
//    println("---------------task first")
//}
//task testDepends3(dependsOn: kaptDebugKotlin) {
//    doLast {
//        println("---------------task next")
//
//    }
//}

//dependsOn not working NEED TO BE SOLVED
//task copySoluContentToRaw(dependsOn: 'kaptDebugKotlin') {
//    doFirst {
//        println("=-=-=-=-=-=-=Delete previous content")
//        delete(file("${projectDir}/src/main/assets/solutionsContent/Solutions.CONTENT"))
//    }
//    doLast {
//        println('=-=-=-=-=-=-Copying SoluContent')
//        def soluCont = file("${projectDir}/build/generated/source/kaptKotlin/debug/Solutions.CONTENT")
//        println(soluCont.length())
//        copy {
//            from file("${projectDir}/build/generated/source/kaptKotlin/debug/Solutions.CONTENT")
//            into "${projectDir}/src/main/assets/solutionsContent"
//        }
//
//
//    }
//}
